keycloak-base-url: http://keycloak:8080

gateway:
  user-lookup:
    client-reg-id: keycloakClientCred
    endpoint: ${keycloak-base-url}/auth/admin/realms/phaedra2/users

server:
  servlet:
    context-path: /phaedra

spring:
  webflux:
    base-path: /phaedra
  cloud:
    gateway:
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods: "*"
            allowedHeaders: "*"
      default-filters:
      - RewritePath=/phaedra/api/v.+/(?<service>.*service)/(?<segment>.*), /phaedra/$\{service}/$\{segment}
      - TokenRelay=
      routes:
      - id: plate-service
        uri: http://phaedra-plate-service:8080
        predicates:
        - Path=/phaedra/api/*/plate-service/**, /phaedra/plate-service/swagger-ui.html, /phaedra/plate-service/swagger-ui/**, /phaedra/plate-service/v3/api-docs/**
      - id: metadata-service
        uri: http://phaedra-metadata-service:8080
        predicates:
        - Path=/phaedra/api/*/metadata-service/**, /phaedra/metadata-service/swagger-ui.html, /phaedra/metadata-service/swagger-ui/**, /phaedra/metadata-service/v3/api-docs/**
      - id: protocol-service
        uri: http://phaedra-protocol-service:8080
        predicates:
        - Path=/phaedra/api/*/protocol-service/**, /phaedra/protocol-service/swagger-ui.html, /phaedra/protocol-service/swagger-ui/**, /phaedra/protocol-service/v3/api-docs/**
      - id: calculation-service
        uri: http://phaedra-calculation-service:8080
        predicates:
        - Path=/phaedra/api/*/calculation-service/**, /phaedra/calculation-service/swagger-ui.html, /phaedra/calculation-service/swagger-ui/**, /phaedra/calculation-service/v3/api-docs/**
      - id: resultdata-service
        uri: http://phaedra-resultdata-service:8080
        predicates:
        - Path=/phaedra/api/*/resultdata-service/**, /phaedra/resultdata-service/swagger-ui.html, /phaedra/resultdata-service/swagger-ui/**, /phaedra/resultdata-service/v3/api-docs/**
      - id: curvedata-service
        uri: http://phaedra-curvedata-service:8080
        predicates:
        - Path=/phaedra/api/*/curvedata-service/**, /phaedra/curvedata-service/swagger-ui.html, /phaedra/curvedata-service/swagger-ui/**, /phaedra/curvedata-service/v3/api-docs/**
      - id: meas-service
        uri: http://phaedra-measurement-service:8080
        predicates:
        - Path=/phaedra/api/*/measurement-service/**, /phaedra/measurement-service/swagger-ui.html, /phaedra/measurement-service/swagger-ui/**, /phaedra/measurement-service/v3/api-docs/**
      - id: datacapture-service
        uri: http://phaedra-datacapture-service:8080
        predicates:
        - Path=/phaedra/api/*/datacapture-service/**
      - id: ui
        uri: http://phaedra-ui:8080
        predicates:
        - Path=/phaedra/ui/**
        filters:
        - RewritePath=/phaedra/ui/(?<segment>.*), /phaedra/ui/$\{segment}
  security:
    oauth2:
      client:
        registration:
          keycloak:
            provider: keycloak
#            client-id: phaedra2-gateway
#            client-secret: ???
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope: openid,profile,email
          keycloakClientCred:
            provider: keycloak
            client-id: ${spring.security.oauth2.client.registration.keycloak.client-id}
            client-secret: ${spring.security.oauth2.client.registration.keycloak.client-secret}
            authorization-grant-type: client_credentials
        provider:
          keycloak:
            authorization-uri: ${keycloak-base-url}/auth/realms/phaedra2/protocol/openid-connect/auth
            token-uri: ${keycloak-base-url}/auth/realms/phaedra2/protocol/openid-connect/token
            user-info-uri: ${keycloak-base-url}/auth/realms/phaedra2/protocol/openid-connect/userinfo
            user-name-attribute: sub
            jwk-set-uri: ${keycloak-base-url}/auth/realms/phaedra2/protocol/openid-connect/certs

logging:
  level:
    root: INFO
    org.springframework.cloud.gateway: DEBUG
#    reactor.netty.http.client.HttpClientConnect: DEBUG
    org.springframework.security: DEBUG
